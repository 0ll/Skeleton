// needs multiple stop support
// needs center adjustment support
@mixin _buildRadialGradient($direction, $start, $stop, $ie) {
	$direction: unquote($direction);
	$webkitGradientDirection: null;
	$linearGradientDirection: null;
	@if($direction == radial or $direction == ellipse or $direction == center) {
		background: $start;
		background: -moz-radial-gradient(center, ellipse cover, $start, $stop);
		background: -webkit-gradient(radial, center center, 0px, center center, 100%, color-stop(0% #{$start}), color-stop(100% #{$stop}));
		background: -webkit-radial-gradient(center, ellipse cover, $start, $stop);
		background: -o-radial-gradient(center, ellipse cover, $start, $stop);
		background: -ms-radial-gradient(center, ellipse cover, $start, $stop);
		background: radial-gradient(ellipse at center, $start, $stop);
	}
	@if($ie == true) {
		filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{$start}', endColorstr='#{$stop}',GradientType=1);
	}
}

// needs multiple stop support
@mixin _buildGradient($direction, $start, $stop, $ie) {
	$direction: unquote($direction);
	$webkitGradientDirection: null;
	$linearGradientDirection: null;
	@if($direction == left or $direction == horizontal) {
		$webkitGradientDirection: linear, left top, right top;
		$linearGradientDirection: to right;
	} @else if($direction == top or $direction == vertical) {
		$webkitGradientDirection: linear, left top, left bottom;
		$linearGradientDirection: to bottom;
	} @else if($direction == left top) {
		$direction: -45deg;
		$webkitGradientDirection: linear, left top, right bottom;
		$linearGradientDirection: 135deg;
	} @else if($direction == left bottom) {
		$direction: 45deg;
		$webkitGradientDirection: linear, left bottom, right top;
		$linearGradientDirection: $direction;
	}
	background: nth($start, 1);
	background-image: -moz-linear-gradient($direction, $start, $stop);
	background-image: -webkit-gradient($webkitGradientDirection, color-stop(nth($start, 1), nth($start, 2)), color-stop(nth($stop, 1), nth($stop, 2)));
	background-image: -webkit-linear-gradient($direction, $start, $stop);
	background-image: -o-linear-gradient($direction, $start, $stop);
	background-image: -ms-linear-gradient($direction, $start, $stop);
	background-image: linear-gradient($linearGradientDirection, $start, $stop);
	@if($ie == true) {
		@include filter-gradient(nth($start, 1), nth($stop, 1), vertical);
	}
}

@mixin filter-gradient($start, $stop: false, $direction: false) {
	$direction: unquote($direction);
	$type: false;
	@if(unquote($start) != none) {
		@if(type-of($direction) != "string") {
			@warn "Invalid parameter for $direction. Expected string but got #{type-of($direction)}, defaulting to vertical";
			$direction: vertical;
		}
		@if($direction == vertical) {
			$type: 0;
		} @else {
			$type: 1;
		}
		filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{ie-hex-str($start)}', endColorstr='#{ie-hex-str($stop)}', GradientType=#{$type});
	} @else {
		$stop: null;
		$direction: null;
		// see http://stackoverflow.com/questions/1768161/how-do-i-reset-or-override-ie-css-filters
		filter: "progid:DXImageTransform.Microsoft.gradient(enabled=false)";
	}
}

// needs multiple stop support
@mixin linear-gradient($direction, $start: false, $stop: false, $ie: true) {
	@if(type-of($start) != "list") {
		@warn "Bad parameter for $start. Expected list got #{type-of($start)}, defaulting to false.";
		$start: false;
	} @else if(type-of($stop) != "list") {
		@warn "Bad parameter for $stop. Expected list got #{type-of($stop)}, defaulting to false.";
		$stop: false;
	}
	@include _buildGradient($direction, $start, $stop, $ie);
}

@mixin radial-gradient($direction, $start: false, $stop: false, $ie: true) {
	@include _buildRadialGradient($direction, $start, $stop, $ie);
}

@mixin single-transition($property, $duration, $function, $delay: false) {
	@if($delay == false) {
		$delay: "";
	}
	-webkit-transition: $property $duration $function $delay;
	-moz-transition: $property $duration $function $delay;
	-ms-transition: $property $duration $function $delay;
	-o-transition: $property $duration $function $delay;
	transition: $property $duration $function $delay;
}

@mixin transition($transition...) {
	-webkit-transition: $transition;
	-moz-transition: $transition;
	-ms-transition: $transition;
	-o-transition: $transition;
	transition: $transition;
}

@mixin reset-box-model {
	margin: 0;
	padding: 0;
	border: 0;
}

@mixin reset-font {
	font-size: 100%;
	font: inherit;
	vertical-align: baseline;
}

@mixin reset-focus {
	outline: 0;
}

@mixin reset-body {
	line-height: 1;
}

@mixin reset-list-style {
	list-style: none;
}

@mixin reset-table {
	border-collapse: collapse;
	border-spacing: 0;
}

@mixin reset-table-cell {
	text-align: left;
	font-weight: normal;
	vertical-align: middle;
}

@mixin reset-quotation {
	quotes: none;
	&:before, &:after {
		content: "";
		content: none;
	}
}

@mixin reset-image-anchor-border {
	border: none;
}

@mixin reset-html5 {
	/* HTML5 display-role reset for older browsers */
	article, aside, details, figcaption, figure, 
	footer, header, hgroup, menu, nav, section { display: block; }
}

@mixin global-reset {
	html, body, div, span, applet, object, iframe,
	h1, h2, h3, h4, h5, h6, p, blockquote, pre,
	a, abbr, acronym, address, big, cite, code,
	del, dfn, em, img, ins, kbd, q, s, samp,
	small, strike, strong, sub, sup, tt, var,
	b, u, i, center,
	dl, dt, dd, ol, ul, li,
	fieldset, form, label, legend,
	table, caption, tbody, tfoot, thead, tr, th, td,
	article, aside, canvas, details, embed, 
	figure, figcaption, footer, header, hgroup, 
	menu, nav, output, ruby, section, summary,
	time, mark, audio, video {
		@include reset-box-model;
		@include reset-font;
	}
	@include reset-html5;
	body { @include reset-body; }
	ol, ul { @include reset-list-style; }
	blockquote, q { @include reset-quotation; }
	table {
		@include reset-table;
	}
}

@mixin nested-reset {
	div, span, applet, object, iframe,
	h1, h2, h3, h4, h5, h6, p, blockquote, pre,
	a, abbr, acronym, address, big, cite, code,
	del, dfn, em, img, ins, kbd, q, s, samp,
	small, strike, strong, sub, sup, tt, var,
	b, u, i, center,
	dl, dt, dd, ol, ul, li,
	fieldset, form, label, legend,
	table, caption, tbody, tfoot, thead, tr, th, td,
	article, aside, canvas, details, embed, 
	figure, figcaption, footer, header, hgroup, 
	menu, nav, output, ruby, section, summary,
	time, mark, audio, video {
		@include reset-box-model;
		@include reset-font;
	}
	ol, ul { @include reset-list-style; }
	blockquote, q { @include reset-quotation; }
	caption, th, td { @include reset-table-cell; }
	table { @include reset-table; }
	a img { @include reset-image-anchor-border; }
}