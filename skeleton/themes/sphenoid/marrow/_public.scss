// Project-scoped mixins? Oh, boy! Am I allowed to use these in my own theme? You bet!
// I have a fix... how do I help? Check the README!

@import "private"; // don't remove me

// ---- MIXINS ----

// Yep, taken right from bourbon - https://github.com/thoughtbot/bourbon/blob/master/dist/addons/_prefixer.scss
// @prefixer ( string $property, mixed $value, list $prefixes )
@mixin prefixer($property, $value, $prefixes) {
	@each $prefix in $prefixes {
		@if $prefix == webkit {
			@if $prefix-for-webkit {
				-webkit-#{$property}: $value;
			}
		}
		@else if $prefix == moz {
			@if $prefix-for-mozilla {
				-moz-#{$property}: $value;
			}
		}
		@else if $prefix == ms {
			@if $prefix-for-microsoft {
				-ms-#{$property}: $value;
			}
		}
		@else if $prefix == o {
			@if $prefix-for-opera {
				-o-#{$property}: $value;
			}
		}
		@else if $prefix == spec {
			@if $prefix-for-spec {
				#{$property}: $value;
			}
		}
		@else  {
			@warn "Unrecognized prefix: #{$prefix}";
		}
	}
}

// @see https://developer.mozilla.org/en-US/docs/Web/CSS/box-shadow
// box-shadow ( [ none | inset? && [ <offset-x> <offset-y> <blur-radius>? <spread-radius>? <color>? ] ] ])
@mixin box_shadow($shadow) {
	@include prefixer(box-shadow, $shadow, webkit moz ms o spec);
}

@mixin border-radius($radii...) {
	@include prefixer(border-radius, $radii, webkit moz ms o spec);
}

@mixin border-top-left-radius($radius: $default-border-radius) { @include _bd("top", "left", $radius); }

@mixin border-top-right-radius($radius: $default-border-radius) { @include _bd("top", "right", $radius); }

@mixin border-bototm-left-radius($radius: $default-border-radius) { @include _bd("bottom", "left", $radius); }

@mixin border-bottom-right-radius($radius: $default-border-radius) { @include _bd("bottom", "right", $radius); }

@mixin border-top-radius($radius: $default-border-radius) {
	@include border-top-left-radius($radius);
	@include border-top-right-radius($radius);
}

@mixin border-right-radius($radius: $default-border-radius) {
	@include border-top-right-radius($radius);
	@include border-bottom-right-radius($radius);
}

@mixin border-bottom-radius($radius: $default-border-radius) {
	@include border-bottom-left-radius($radius);
	@include border-bottom-right-radius($radius);
}

@mixin border-left-radius($radius: $default-border-radius) {
	@include border-top-left-radius($radius);
	@include border-bottom-left-radius($radius);
}

// opacity
// opacity ( number $alpha [ boolean $ie: true ] )
@mixin opacity($alhpa, $ie: true) {
	@if(type-of($alpha) != number) {
		@warn "$alpha must be a number. Setting to 0.5.";
		$alpha: 0.5;
	} @else {
		@if($alpha < 0 or $alpha > 1) {
			@warn "$alpha must be within 0 and 1. Setting to 0.5.";
			$alpha: 0.5;
		}
	}
	@if($ie == true) {
		filter: progid:DXImageTransform.Microsoft.Alpha(Opacity=$alpha * 100);
	}
	opacity: $alpha;
}

// box-sixing ( string $type )
@mixin box-sizing($type) {
	$type: unquote($type);
	@include prefixer(box-sizing, $type, webkit moz spec);
}

// single-transition ( string $property, number $duration, string $function, [ number $delay: false ] )
@mixin single-transition($property, $duration, $function, $delay: false) {
	@if($delay == false) {
		$delay: "";
	}
	$transition: $property $duration $function $delay;
	@include prefixer(transition, $transition, webkit moz ms o spec);
}

// transition ( list $transition )
@mixin transition($transition) {
	$transition: unquote($transition); //this helps with multiple tansitions
	@include prefixer(transition, $transition, webkit moz ms o spec);
}

// filter-gradient ( color $start, [ color $stop: false, [ string $direction: false ] ] )
@mixin filter-gradient($start, $stop: false, $direction: false) {
	$direction: unquote($direction);
	$type: false;
	@if(unquote($start) != none) {
		*zoom: 1;
		filter: progid:DXImageTransform.Microsoft.gradient(gradientType=0, startColorstr='#{ie-hex-str($start)}', endColorstr='#{ie-hex-str($stop)}');
	} @else {
		$stop: null;
		$direction: null;
		// see http://stackoverflow.com/questions/1768161/how-do-i-reset-or-override-ie-css-filters
		filter: "progid:DXImageTransform.Microsoft.gradient(enabled=false)";
	}
}

// needs multiple stop support
// linear-gradient ( string $direction, list $start, list $stop, [ boolean $ie: true ] )
@mixin linear-gradient($direction, $start, $stop, $ie: true) {
	@if(type-of($start) != "list") {
		@warn "Bad parameter for $start. Expected list got #{type-of($start)}, defaulting to false.";
		$start: false;
	} @else if(type-of($stop) != "list") {
		@warn "Bad parameter for $stop. Expected list got #{type-of($stop)}, defaulting to false.";
		$stop: false;
	}
	@include _buildGradient($direction, $start, $stop, $ie);
}

// radial-gradient ( string $direction, list $start, list $stop, [ boolean $ie: true ] )
@mixin radial-gradient($direction, $start, $stop, $ie: true) {
	@include _buildRadialGradient($direction, $start, $stop, $ie);
}

// begin reset mixins
@mixin reset-box-model {
	margin: 0;
	padding: 0;
	border: 0;
}

@mixin reset-font {
	font-size: 100%;
	font: inherit;
	vertical-align: baseline;
}

@mixin reset-focus { outline: 0; }
@mixin reset-body { line-height: 1; }
@mixin reset-list-style { list-style: none; }
@mixin reset-image-anchor-border { border: none; }

@mixin reset-table {
	border: {
		collapse: collapse;
		spacing: 0;
	}
}

@mixin reset-table-cell {
	text-align: left;
	font-weight: normal;
	vertical-align: middle;
}

@mixin reset-quotation {
	quotes: none;
	&:before, &:after {
		content: "";
		content: none;
	}
}

@mixin reset-html5 {
	/* HTML5 display-role reset for older browsers */
	article, aside, details, figcaption, figure,
	footer, header, hgroup, menu, nav, section { display: block; }
}

@mixin global-reset {
	html, body, div, span, applet, object, iframe,
	h1, h2, h3, h4, h5, h6, p, blockquote, pre,
	a, abbr, acronym, address, big, cite, code,
	del, dfn, em, img, ins, kbd, q, s, samp,
	small, strike, strong, sub, sup, tt, var,
	b, u, i, center,
	dl, dt, dd, ol, ul, li,
	fieldset, form, label, legend,
	table, caption, tbody, tfoot, thead, tr, th, td,
	article, aside, canvas, details, embed,
	figure, figcaption, footer, header, hgroup,
	menu, nav, output, ruby, section, summary,
	time, mark, audio, video {
		@include reset-box-model;
		@include reset-font;
	}
	@include reset-html5;
	body { @include reset-body; }
	ol, ul { @include reset-list-style; }
	blockquote, q { @include reset-quotation; }
	table {
		@include reset-table;
	}
}

@mixin nested-reset {
	div, span, applet, object, iframe,
	h1, h2, h3, h4, h5, h6, p, blockquote, pre,
	a, abbr, acronym, address, big, cite, code,
	del, dfn, em, img, ins, kbd, q, s, samp,
	small, strike, strong, sub, sup, tt, var,
	b, u, i, center,
	dl, dt, dd, ol, ul, li,
	fieldset, form, label, legend,
	table, caption, tbody, tfoot, thead, tr, th, td,
	article, aside, canvas, details, embed,
	figure, figcaption, footer, header, hgroup,
	menu, nav, output, ruby, section, summary,
	time, mark, audio, video {
		@include reset-box-model;
		@include reset-font;
	}
	ol, ul { @include reset-list-style; }
	blockquote, q { @include reset-quotation; }
	caption, th, td { @include reset-table-cell; }
	table { @include reset-table; }
	a img { @include reset-image-anchor-border; }
}
// end reset mixins
